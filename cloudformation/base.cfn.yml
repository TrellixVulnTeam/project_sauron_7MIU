AWSTemplateFormatVersion: '2010-09-09'
Description: 'Base Template for deploying a dockerized application'

Parameters:
  Swarm:
    Description: 'Docker Swarm Cluster to use'
    Type: String
  PublishPort:
    Description: 'Port Application is exposing'
    Type: Number
  BillingDivision:
    Type: String
  BillingEnvironment:
    Type: String
  BillingProject:
    Type: String
  BillingEnvId:
    Type: String
  BillingRole:
    Type: String
  TargetGroupTags:
    Type: CommaDelimitedList
  SecurityGroups:
    Description: 'Security Group to use for the Application Load Balancer'
    Type: 'String'
    Default: 'sg-6c8a911b'
  SubnetAZ1:
    Type: 'String'
    Default: 'subnet-5f4a6c29'
  SubnetAZ2:
    Type: 'String'
    Default: 'subnet-2f4e3c77'
  SubnetAZ3:
    Type: 'String'
    Default: 'subnet-d31067f9'
  SubnetAZ4:
    Type: 'String'
    Default: 'subnet-a5765198'
  TargetVpcId:
    Type: 'AWS::EC2::VPC::Id'
    Default: 'vpc-6b3cfe0c'
  DnsZoneName:
    Type: String
    Default: 'mldev.cloud.'
  Certificate:
    Type: String
    Default: 'arn:aws:acm:us-east-1:999447569257:certificate/f52216d5-601a-45b8-9748-939b8356f1b0'
  AppLoadBalancerScheme:
    Description: 'Specifies if the Load Balancer is internal or internet-facing'
    Type: String
    Default: 'internet-facing'
    AllowedValues:
      - 'internal'
      - 'internet-facing'

Resources:
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Protocol: HTTP
      Port: !Ref PublishPort
      VpcId: !Ref TargetVpcId
      Name: !Ref 'AWS::StackName'
      Tags:
        - Key: swarm
          Value: !Ref Swarm
        - Key: PublishPort
          Value: !Ref PublishPort
  AppLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Ref 'AWS::StackName'
      Scheme: !Ref AppLoadBalancerScheme
      SecurityGroups:
        - !Ref SecurityGroups
      Subnets:
        - !Ref SubnetAZ1
        - !Ref SubnetAZ2
        - !Ref SubnetAZ3
        - !Ref SubnetAZ4        
      Tags:
        - Key: division 
          Value: !Ref BillingDivision
        - Key: project 
          Value: !Ref BillingProject
        - Key: environment 
          Value: !Ref BillingEnvironment
        - Key: envid 
          Value: !Ref BillingEnvId
        - Key: role
          Value: !Ref BillingRole
  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget: 
        DNSName: !GetAtt AppLoadBalancer.DNSName
        HostedZoneId: !GetAtt AppLoadBalancer.CanonicalHostedZoneID
      Name: !Join ['.', [!Ref 'AWS::StackName', !Ref 'DnsZoneName']]
      Type: 'A'
      HostedZoneName: !Ref DnsZoneName
